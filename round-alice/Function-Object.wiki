Creates a new function.

 function functionName '''([''' argname1 [, ...[, argnameN ]]])
 { body }
 functionName = new Function( [ argname1 ,  [...argnameN ,]] body );

==Parameters==
; functionName: Required. The name of the newly created function
; argname1...argnameN: Optional. A list of arguments the function accepts.
; body: Optional. A string that contains the block of JavaScript code to be executed when the function is called.

==Remarks==
The function is a basic data type in JavaScript. Syntax 1 creates a function value that JavaScript converts into a Function object when necessary. JavaScript converts Function objects created by Syntax 2 into function values at the time the function is called.

Syntax 1 is the standard way to create new functions in JavaScript. Syntax 2 is an alternative form used to create function objects explicitly.

For example, to declare a function that adds the two arguments passed to it, you can do it in one of two ways:


==Example 1==
 function add(x, y)
 {
    return(x + y);
 }

==Example 2==
 var add = function(x, y) {
      return(x+y);
 }
In either case, you call the function with a line of code similar to the following:

 add(2, 3);
'''Note''' -- When you call a function, make sure that you always include the parentheses and any required arguments. Calling a function without parentheses causes the function itself to be returned, instead of the return value of the function.


==Properties==
[[Objects/arguments/0 n Properties|prototype Property]]


==Methods==
[[Objects/Function/apply Method|valueOf Method]]


==Requirements==
Supported in the following document modes: Quirks, Internet Explorer 6 standards, Internet Explorer 7 standards, Internet Explorer 8 standards, Internet Explorer 9 standards, Internet Explorer 10 standards. Also supported in Windows Store apps. See Version Information.


==See Also==

              

              

              
